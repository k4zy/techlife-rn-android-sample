apply plugin: "com.android.application"

import com.android.build.OutputFile

project.ext.react = [
    entryFile: "index.js"
]

apply from: "../../node_modules/react-native/react.gradle"
apply from: "${project.rootDir}/gradle/appversion/appversion.gradle"

def env(String name, String defValue) {
    def value = System.getenv()[name]
    return value == null ? defValue : value
}

def enableSeparateBuildPerCPUArchitecture = false
def enableProguardInReleaseBuilds = false

android {
    compileSdkVersion 27

    defaultConfig {
        applicationId "com.sampleproject"
        minSdkVersion 16
        targetSdkVersion 27
        versionCode project.ext.getVersionCode()
        versionName project.ext.getVersionName()
    }

    signingConfigs {
        debug {
            storeFile = file('./debug.keystore')
            storePassword = 'android'
            keyAlias = 'androiddebugkey'
            keyPassword = 'android'
        }
        def releaseSettingGradleFile = new File(env("RELEASE_SETTING_GRADLE", "${project.rootDir}/cookpad-mykitchen.gradle"))
        if (releaseSettingGradleFile.exists()) {
            apply from: releaseSettingGradleFile, to: android
        } else {
            release {
                storeFile = debug.storeFile
                storePassword = debug.storePassword
                keyAlias = debug.keyAlias
                keyPassword = debug.keyPassword
            }
        }
    }

    splits {
        abi {
            reset()
            enable enableSeparateBuildPerCPUArchitecture
            universalApk false
            include "armeabi-v7a", "x86"
        }
    }
    buildTypes {
        debug {
            applicationIdSuffix '.debug'
        }
        release {
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            signingConfig signingConfigs.release
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def versionCodes = ["armeabi-v7a":1, "x86":2]
            def abi = output.getFilter(OutputFile.ABI)
            if (abi != null) {
                output.versionCodeOverride =
                        versionCodes.get(abi) * 1048576 + defaultConfig.versionCode
            }
        }
    }

    flavorDimensions "default"
    productFlavors {
        staging {
            buildConfigField "String", "CODEPUSH_ID", '"staging_codepush_id"'
            buildConfigField "String", "OAUTH_UID", '"staging_uid"'
            buildConfigField "String", "OAUTH_SECRET", '"staging_secret"'
            buildConfigField "String", "API_URL", '"https://staging.example.com"'
            buildConfigField "String", "AUTH_URL", '"https://staging-auth.example.com"'
            buildConfigField "String", "WEB_URL", '"https://staging.example.com"'
            applicationId 'your.package.name.staging'
        }
        production {
            buildConfigField "String", "CODEPUSH_ID", '"production_codepush_id"'
            buildConfigField "String", "OAUTH_UID", '"production_uid"'
            buildConfigField "String", "OAUTH_SECRET", '"produciton_secret"'
            buildConfigField "String", "API_URL", '"https://example.com"'
            buildConfigField "String", "AUTH_URL", '"https://auth.example.com"'
            buildConfigField "String", "WEB_URL", '"https://example.com"'
        }
    }

}

dependencies {
    implementation "com.android.support:appcompat-v7:27.1.1"
    implementation "com.facebook.react:react-native:+"
}
